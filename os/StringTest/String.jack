class String {
    field Array str;
    field int maximumLength;
    field int length;

    constructor String new(int maxLength) {
        if (maxLength > 0) { // allow for an array of size 0 to be created
            let str = Array.new(maxLength);
        }
        let maximumLength = maxLength;
        let length = 0;

        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method int length() {
        return length;
    }

    method char charAt(int j) {
        if (j > length) {
            return str[length];
        }
        return str[j];        
    }

    method void setCharAt(int j, char c) {
        if ((~(maximumLength = length + 1)) | (~(length = maximumLength))) {
            let str[j] = c;
        }
        
        return;
    }

    method String appendChar(char c) {
        if (~(length = maximumLength)) {
            let str[length] = c;
            let length = length + 1;
        }
        
        return this;
    }

    method void eraseLastChar() {
        if (~(length = 0)) {
            let str[length - 1] = 0;
            let length = length - 1;
        }
        
        return;
    }

    method int intValue() {
        var int v, i, d;

        let v = 0;
        let i = 0;

        while (i < length) {
            let d = str[i];
            if ((d > 47) & (d < 58)) {
                let d = d - 48;
                let v = v * 10 + d;
            }
            let i = i + 1;
        }

        if (str[0] = 45) {
            return v * -1;
        }

        return v;
    }

    method void setInt(int val) {
        var int lastDigit, c, tempVal;
        // save the original value of val so that the sign can be figured out
        // at the end of recursion
        let tempVal = Math.abs(val);

        let lastDigit = tempVal - (10 * (tempVal / 10));
        let c = lastDigit + 48;

        if (tempVal < 10) {
            if (val < 0) {
                do appendChar(45);
            }
            do appendChar(c);
        } else {
            do setInt(val / 10);
            do appendChar(c);
        }
        
        return;
    }

    function char backSpace() {
        return 129;
    }

    function char doubleQuote() {
        return 34;
    }

    function char newLine() {
        return 128;
    }
}